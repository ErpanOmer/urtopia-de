<div class="product" data-pf-type="ProductBox">
    <div class="centeral-content">
        <div></div>
        <form method="post" accept-charset="UTF-8" action="/cart/add" class="product-panel pf-product-form" data-productid={{ product.id }} id="product_form_{{ product.id }}" enctype="multipart/form-data">
            <input type="hidden" name="id" data-product-id="{{product.id}}" value="{{ product.selected_or_first_available_variant.id }}"/>
            <input type="hidden" name="form_type" value="product">
            <input type="hidden" name="utf8" value="✓">
            <div class="u36DemiBold_v2 mb16">{{ product.title }}</div>
            <div class="u30DemiBold_v2 mb16">{{ product.price | money }}</div>
            <div class="sale mb16">
                <div class="u20DemiBold_v2">€2.699,00 NOW</div>
                <div class="u17DemiBold_v2">with Green travel sale</div>
            </div>
            <div class="sale_acc mb16">
                <div class="u14Light_v2">And get €169 Accessories for <span class="u20DemiBold_v2">Free</span></div>
                {% assign accessories_map = "7633738596568,7633738662104,7633738531032" | split: ',' %}
                <div class="accs">
                    {% for acc in accessories_map %}
                        {% for prod in collections["accessories"].products %}
                            {% if acc contains prod.id %}
                                <div class="acc">
                                    {{ prod.featured_image | image_url: width: 400 | image_tag }}
                                    {% if acc == "7633738662104" %}
                                        <span class="u11Medium_v2">{{ prod.title | truncatewords: 3, "" | replace: "-", "" }}</span>
                                    {% else %}
                                        <span class="u11Medium_v2">{{ prod.title }}</span>
                                    {% endif %}
                                </div>
                            {% endif %}
                        {% endfor %}
                    {% endfor %}
                </div>
                <div class="u11Light_v2">*Not available with leasing</div>
            </div>
            <div class="count-down mb16">
                <div class="u17Medium_v2">€600 off + 3 Free Accessories Ends in：</div>
            </div>
            <div class="options">
                {% for option in product.options %}
                    <div class="option" option={{option}}>
                        <div class="u17DemiBold_v2 mb16">{{ option }} - <span class="u17Light_v2"></span></div>
                        <div class="{{ option }} mb16"></div>
                    </div>
                {% endfor %}
            </div>
            <div class="accessories">
                <div class="u17DemiBold_v2 mb16">Gears you need</div>
                <div class="navigate">
                    <div class="prev"></div>
                    <div class="next"></div>
                </div>
                <div class="items mb16">
                    {% for prod in collections['on-page'].products %}
                        {% assign variant = prod.variants | first %}
                        <div class="item" variant-id="{{ variant.id }}">
                            {{ prod.featured_image | image_url: width: 400 | image_tag }}
                            <div>
                                <span class=u11Light_v2>+</span>
                                <span class="u17DemiBold_v2">{{ prod.price | money }}</span>
                                <span class="u11Medium_v2">{{ prod.title }}</span>
                            </div>
                        </div>
                    {% endfor %}
                </div>
            </div>
            <div class="buttons">
                <div
                    data-product-id="{{ product.id }}"
                    class="my-button my-button-origin addToCartBtn"
                    onclick="addAllToCart('atc')"
                    id="addToCart"
                    >
                    <i class="fa fa-spinner fa-spin"></i><span data-pf-type="Text" class="addToCartText">Add to Cart</span>
                </div>
                <div onclick="testRideTrace('lease_on_jobrad', this)" class="orderTestRideBtn">
                    <img class="oneeee" src="https://cdn.shopify.com/s/files/1/0633/2068/6808/files/jobradorg_2x_423443a0-1c79-4785-97a0-2be8ae66ceb6.png?v=1685414275"/>
                    <span><span class="u17DemiBold_v2">TAX FREE Leasing</span><span>36 months, €48/month</span></span>
                  </div>
                  <div onclick="testRideTrace('klarna_check_out', this)" class="orderTestRideBtn">
                    <img class="twoooo"src="https://cdn.shopifycdn.net/s/files/1/0633/2068/6808/files/20230530-121400.png?v=1685420054"/>
                    <span><span class="u17DemiBold_v2">0% APR Financing</span><span>24 months, €112/month</span></span>
                </div>
            </div>
            <div class="delivery_time">Free shipping <span>within 5 days</span></div>
        </form>
    </div>
</div>

<script>
    const search = getSearchValues()
    const variants = JSON.parse(JSON.stringify({{ product.variants | json }}))
    const size_map = {
        M: 'Fit for 170-185 cm',
        L: 'Fit for 180-195 cm'
    }

    let current_variant_id = null
    let current_variant = null
    const styles = {}
    const sizes = {}

    function findVariantOptions (style, size) {
        return variants.find(v => `${style} / ${size}` === v.title)
    }

    function findVariantFromId (id) {
        return variants.find(v => String(v.id) === String(id))
    }

    function findAvailableVariant () {
        return variants.find(v => v.available)
    }

    function changeAvive (style, size) {
        if (style) {
            $(`.product .product-panel .Style .active`).removeClass('active')
            $(`.product .product-panel .Style > div[attribute="${style}"]`).addClass('active')
            $(`.product .product-panel .options > div[option="Style"] .u17DemiBold_v2 .u17Light_v2`).text(style)
        }

        if (size) {
            $(`.product .product-panel .Size .active`).removeClass('active')
            $(`.product .product-panel .Size > div[attribute="${size}"]`).addClass('active')
            $(`.product .product-panel .options > div[option="Size"] .u17DemiBold_v2 .u17Light_v2`).text(size_map[size])
        }


        if (style && size) {
            current_variant = findVariantOptions(style, size)
            current_variant_id = current_variant.id


            history.replaceState(null, '', `${location.pathname}?variant=${current_variant_id}`);
            $('.product .product-panel input[name="id"]').val(current_variant_id)
            $('.product .delivery_time').text(global_config.ebike_delivery_time[current_variant_id])
        }

        console.log(current_variant)
    }


    function changeAddToCartText (parse, step = 0) {
        if (step) {
            $(".addToCartBtn i").toggleClass("showi");
            document.querySelector(".addToCartBtn span").innerHTML = "Adding...";
        } else {
            setTimeout(()=>{
                $(".addToCartBtn i").toggleClass("showi");
                document.querySelector(".addToCartBtn span").innerHTML = "Add to Cart";
            }, 800)
        }
    }

    function testRideTrace(type = '', target){

        // 如果已经有按钮 loading ,直接退出来
        if (!type || $('.orderTestRideBtn').hasClass('loading')) {
            return
        }
    
        const t = $(target)
    
        t.addClass('loading')
        // 原本的html 存起来
        const text = t.find('span').html()
        const loading = '<i class="fa fa-spinner fa-spin"></i>Processing...'
    
        // loading
        t.find('span').html(loading)
    
        
    
        if (type === 'lease_on_jobrad') {
            fetchBuried('websiteclick', `carbon-order-page`, { button: type }, true)
    
            t.removeClass('loading')
            t.find('span').html(text)
            return window.open(`/pages/ebike-leasing?bike_style=${current_variant.option1}&bike_size=${current_variant.option2}&utm_source=order_page#forms`)
        }
    
        if (type === 'klarna_check_out') {
            fetchBuried('websiteclick', `carbon-order-page`, { button: type, action_type: sessionStorage.carbon_one_a_b_test_flag }, true)
            window.sessionStorage.clicked_klarna_checkout_button = 'clicked_klarna_checkout_button'
    
            if (sessionStorage.carbon_one_a_b_test_flag === 'B') {
                setTimeout(() => {
                    t.removeClass('loading')
                    t.find('span').html(text)
                }, 2000)
                // 如果 B test 需要显示 klarna checkout
                window.show_notification_checkout_button = true
                return addToCartInsurance("atc", true)
            }
    
            const body = { items: [{ id: current_variant_id, quantity: 1 }] }
            body.items = body.items.concat(global_config.event_accessories_variant_ids.map(id => ({ id, quantity: 1 })))
    
    
            console.log('body', body)
    
    
            return fetch(window.Shopify.routes.root + 'cart/add.js', {
                method: 'POST',
                headers: {
                'Content-Type': 'application/json'
                },
                body: JSON.stringify(body)
            }).then(response => {
                location.href = `/checkout?show_klarna_dialog=show_klarna_dialog`
            }).catch((error) => {
                t.removeClass('loading')
                t.find('span').html(text)
            
                console.error('Error:', error);
            })
        }
    
        if (type === 'shop_on_mediamarkt') {
            t.removeClass('loading')
            t.find('span').html(text)
            return window.open('https://www.mediamarkt.de/de/search.html?query=urtopia&filter=carType%3ACitybike')
          
        }
    }

    {% for variant in product.variants %}
        styles[{{ variant.option1 | json }}] = 1
        sizes[{{ variant.option2 | json }}] = 1
    {% endfor %}

    console.log('variants', variants)

    for (const style of Object.keys(styles)) {
        $('.product .product-panel .Style').append(`<div attribute="${style}" class="${style}"></div>`)
    }

    for (const size of Object.keys(sizes)) {
        $('.product .product-panel .Size').append(`<div attribute="${size}" class="${size} u17Light_v2">${size}</div>`)
    }


    $('.product-panel .options .option >div:not(.u17DemiBold_v2) > div').on('click',e => {
        const t = $(e.target)

        if ($(e.target).parent().hasClass('Style')) {
            changeAvive(t.attr('attribute'), current_variant.option2)
        } else {
            changeAvive(current_variant.option1, t.attr('attribute'))
        }
    })

    // 如果有查询参数
    if (search.variant) {
        changeAvive(findVariantFromId(search.variant).option1, findVariantFromId(search.variant).option2) 
    } else {
        changeAvive(findAvailableVariant().option1, findAvailableVariant().option2)
    }



    $('.accessories .navigate > div').on('click', e => {
        const items = $('.accessories .items')

        items.animate({
            scrollLeft: $('.accessories .items').scrollLeft() + ($(e.target).hasClass('next') ? 180 : -180)
        }, 300)
    })

    $('.accessories .items .item').on('click', e => {
        const item = $(e.target).closest('.item')

        item.hasClass('active') ? item.removeClass('active') : item.addClass('active')
    })

    $('.product .product-panel').on("submit", function (event) {

        // 阻止默认行为
        event.preventDefault();
        return false;
    })

    

    

    {% comment %} window.addEventListener('load', e => {
        $('.product .product-panel .buttons').prepend($('.js-insurance-product-template').html())
        $('.product .product-panel').prepend($('.js-insurance-metafields-template').html())
    }) {% endcomment %}
    
</script>