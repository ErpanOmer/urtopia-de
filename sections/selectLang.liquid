<!-- Cozy Country Redirect Optimization Code Start -->
{{ shop.metafields.CCR.shopat_script }}
<!-- Cozy Country Redirect Optimization Code Start -->

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-205871538-3"></script>
<script defer crossorigin="anonymous" src="https://connect.facebook.net/de_DE/sdk.js#xfbml=1&version=v14.0" nonce="nryZARoa"></script>
<script async src="https://www.googletagmanager.com/gtag/js?id=G-2WKKVDX6JH"></script>

<div class="selectLangModal" id="selectLangModal">
  <div class="selectLangContainer">
    {% comment %} <span>✕<span> {% endcomment %}
    <h2>Select Your Language</h2>
    <p>Would you like to Select a language that you’re more comfortable with?</p>
    <div class="bottomButton">
      <div class="selectContainer" onclick="setLangOpen()">
        <div class="selectBox">
          <span id="curentLang" data_code="en">English</span>
        </div>
        <ul class="downSelectBox">
          <li
            data-code="en"
            data-value="English"
            onclick="updateLang(this)"
          >
            English
          </li>
          <li data-code="de" data-value="German" onclick="updateLang(this)">German</li>
          <li data-code="fr" data-value="French" onclick="updateLang(this)">French</li>
        </ul>
      </div>
      <button type="button" onclick="goToPage()">Select</button>
    </div>
  </div>
</div>

<style>
  .selectLangModal {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: #000000b3;
    display: none;
    justify-content: center;
    align-items: center;
    z-index: 999;
  }
  .selectLangModal.open {
    display: flex;
  }
  .selectLangContainer {
    width: 80%;
    max-width: 700px;
    aspect-ratio: 700/350;
    border-radius: 10px;
    background-color: white;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    {% comment %} position: relative; {% endcomment %}
  }

  .selectLangContainer span {
    position: absolute;
    right: 0;
    top: 0;
    font-size: 24px;
  }

  .selectLangContainer h2 {
    margin: 0 0 20px 0px;
    font: normal normal 600 24px/28px urbane;
  }
  .selectLangContainer p {
    max-width: 358px;
    text-align: center;
    font: normal normal 300 17px/24px urbane;
  }
  .selectContainer {
    position: relative;
    margin-right: 10px;
  }
  .selectContainer .selectBox {
    width: 224px;
    height: 47px;
    padding: 0 25px;
    font: normal normal 500 16px/19px urbane;
    line-height: 47px;
    border-radius: 30px;
    border: 1px solid black;
    cursor: pointer;
    display: flex;
    align-items: center;
  }
  .selectLangContainer button {
    padding: 16px 30px;
    height: 47px;
    border-radius: 30px;
    background-color: #000;
    color: #fff;
    border: none;
    cursor: pointer;
  }
  .downSelectBox {
    position: absolute;
    top: 60px;
    left: 0;
    margin: 0;
    padding: 0;
    background-color: #fff;
    box-shadow: 0px 0px 10px #00000019;
    border-radius: 12px;
    width: 100%;
    display: none;
  }
  .downSelectBox li {
    list-style-type: none;
    padding: 13px;
    cursor: pointer;
  }
  .bottomButton {
    margin-top: 60px;
    display: flex;
  }
  .selectBox::after {
    content: '';
    display: inline-block;
    width: 7px;
    height: 7px;
    margin: 0 5px 0 auto;
    border-width: 0 1px 1px 0;
    border-style: solid;
    border-color: #000;
    opacity: 0.9;
    transform: rotate(45deg) translate(0, -40%);
    transition: 0.3s ease;
  }
  .selectContainer.open .selectBox::after {
    transform: rotate(-135deg) translate(-2px, 0);
  }
  .selectContainer.open .downSelectBox {
    display: block;
  }
  @media screen and (max-width: 768px) {
    .selectLangContainer {
      aspect-ratio: 305/278;
      padding: 0 16px;
    }
    .selectLangContainer h2 {
      font: normal normal 600 20px/24px urbane;
    }
    .selectLangContainer p {
      font: normal normal 300 15px/21px urbane;
    }
    .selectContainer .selectBox {
      width: 150px;
      height: 40px;
      padding: 0 16px;
      font: normal normal 500 14px/19px urbane;
    }
    .selectLangContainer button {
      padding: 0 16px;
      height: 40px;
    }
  }
</style>

<script>
  
  
  class MyStorage {
    constructor(props) {
      this.props = props || {};
      this.source = this.props.source || window.localStorage;
      this.initrun();
    }
    initrun() {
      /*
       * set 存储方法
       * @ param {string} key 键
       * @ param {string} value 值，存储的值可能是数组/对象，不能直接存储，需要转换 json.stringify
       * @ param {string} expired 过期时间，以分钟为单位
       * @ 由@it·平头哥联盟-首席填坑官∙苏南 分享
       */
      const reg = new RegExp('__expires__');
      let data = this.source;
      let list = Object.keys(data);
      if (list.length > 0) {
        list.map((key, v) => {
          if (!reg.test(key)) {
            let now = Date.now();
            let expires = data[`${key}__expires__`] || Date.now() + 1;
            if (now >= expires) {
              this.remove(key);
            }
          }
          return key;
        });
      }
    }

    set(key, value, expired = 3) {
      /*
      * set 存储方法
      * @ param {string} key 键
      * @ param {string} value 值，
      * @ param {string} expired 过期时间，以分钟为单位，非必须
      * @ 由@it·平头哥联盟-首席填坑官∙苏南 分享
      */
      let source = this.source;
      source[key] = JSON.stringify(value);
      if (expired){
      source[`${key}__expires__`] = Date.now() + 1000 * 60 * 60 * 24 * expired
      };
      return value;
     }

    get(key) {
      /*
      * get 获取方法
      * @ param {string} key 键
      * @ param {string} expired 存储时为非必须字段，所以有可能取不到，默认为 date.now+1
      * @ 由@it·平头哥联盟-首席填坑官∙苏南 分享
      */
      const source = this.source,
      expired = source[`${key}__expires__`]||Date.now()+1;
      const now = Date.now();
      
      if ( now >= expired ) {
      this.remove(key);
      return;
      }
      const value = source[key] ? JSON.parse(source[key]) : source[key];
      return value;
     }

    remove(key) {
      const data = this.source,
      value = data[key];
      delete data[key];
      delete data[`${key}__expires__`];
      return value;
     }
  }


  const storage = new MyStorage()

  console.log(storage)

  // 监听页面语言插件切换
  document.querySelectorAll('.tl-options .tl-option').forEach((v) => {
    v.addEventListener('click', () => {
      let val = v.getAttribute('data-value');
      var d = new Date();
      d.setTime(d.getTime() + 3 * 24 * 60 * 60 * 1000); // 3天后到期
      var expires = d.toGMTString();

      {% comment %} delCookie('selectLang');

      setTimeout(() => {
        document.cookie = `selectLang=${val};expires=${expires};path=/`;
      }, 300); {% endcomment %}


      storage.set('selectLang', val)
    });
  });

  function gotoLocation (code = 'de') {
    let url = '';
      const pathname = window.location.pathname.replace(/\/fr|\/en/g, '');

      if (code === 'de') {
        url = window.location.origin + pathname;
      } else {
        url = window.location.origin + '/' + code + pathname;
      }

      // 避免死循环
      if (window.location.href === url) {
        return;
      }

      window.location.href = url;
  }

  const langmap = {
    en: {
      code: 'en',
      value: 'English',
    },
    de: {
      code: 'de',
      value: 'German',
    },
    fr: {
      code: 'fr',
      value: 'French',
    },
  };
  window.onload = () => {
    console.log('加载了');
    let langCode = window.CozyCountryRedirect.country;
    let locale = window.Shopify.locale;

    let langCookie = storage.get('selectLang') || ''

    console.log('当前国家', langCode, '当前语言', locale, 'langCookie', langCookie);
    // 是否选择语言
    if (langCookie) {
      gotoLocation(langCookie)
    } else {
      let notShowModal =
        (langCode === 'de' && locale === 'de') ||
        (langCode === 'fr' && locale === 'fr') ||
        (langCode !== 'de' && langCode !== 'fr' && locale === 'en');

      let recommendCode = langmap[langCode]?.code || 'en';
      let recommendVal = langmap[langCode]?.value || 'English';
      document.querySelector('#curentLang').setAttribute('data_code', recommendCode);
      document.querySelector('#curentLang').innerText = recommendVal;

      if (!notShowModal) {
        document.querySelector('#selectLangModal').classList.add('open');
      }
    }
  };
  const updateLang = (el) => {
    let code = el.getAttribute('data-code');
    let val = el.getAttribute('data-value');

    document.querySelector('#curentLang').setAttribute('data_code', code);
    document.querySelector('#curentLang').innerText = val;
  };

  const setLangOpen = () => {
    if (document.querySelector('.selectContainer').classList.value.indexOf('open') !== -1) {
      document.querySelector('.selectContainer').classList.remove('open');
    } else {
      document.querySelector('.selectContainer').classList.add('open');
    }
  };

  const goToPage = () => {
    let currCode = document.querySelector('#curentLang').getAttribute('data_code');

    document.querySelector('#selectLangModal').classList.remove('open');

    var d = new Date();
    d.setTime(d.getTime() + 3 * 24 * 60 * 60 * 1000); // 3天后到期
    var expires = d.toGMTString();
    {% comment %} delCookie('selectLang');

    setTimeout(() => {
      document.cookie = `selectLang=${currCode};expires=${expires};path=/`;
    }, 300); {% endcomment %}

    storage.set('selectLang', currCode)
    
    gotoLocation(currCode)

    console.log('currCode', currCode);
  };

  function getCookie(cname) {
    var name = cname + '=';
    var ca = document.cookie.split(';');
    for (var i = 0; i < ca.length; i++) {
      var c = ca[i].trim();
      if (c.indexOf(name) == 0) return c.substring(name.length, c.length);
    }
    return '';
  }

  function delCookie(name) {
    var exp = new Date();
    exp.setTime(exp.getTime() - 1);
    var cval = getCookie(name);
    if (cval != null) {
      document.cookie = name + '=' + cval + ';expires=Thu, 01 Jan 1970 00:00:00 UTC;path=/;';
    }
  }


</script>

{% schema %}
{
  "name": "Section name",
  "settings": []
}
{% endschema %}

{% stylesheet %}
{% endstylesheet %}

{% javascript %}
{% endjavascript %}
